import arg from "arg";
import { mkdirSync, writeFileSync } from "fs";
import path from "path";
import postgres from "postgres";
import { generateTableTypes } from "./lib/schemaGenerator";

function printHelp() {
  console.log(`
retool-db-types - Generate TypeScript types from your Retool database

Usage:
  retool-db-types --url <url> [options]

Options:
  -u, --url <url>      Database connection URL (required)
  -o, --output <path>  Output directory (default: "./src/types")
  -t, --table <table>  Specific table to generate types for
  -h, --help          Show this help message

Examples:
  retool-db-types --url="postgresql://..." --table=users
  retool-db-types --url="postgresql://..." --output=./types
`);
}

function printProgress(current: number, total: number) {
  const barWidth = 30;
  const progress = Math.round((current / total) * barWidth);
  const bar = "▓".repeat(progress) + "░".repeat(barWidth - progress);
  const percentage = Math.round((current / total) * 100);
  process.stdout.write(
    `\r[${bar}] ${percentage}% | ${current}/${total} tables`,
  );
}

async function generateTypes(options: {
  url: string;
  output: string;
  table?: string;
}) {
  if (!options.url) {
    console.error("Error: Database URL is required");
    process.exit(1);
  }

  const sql = postgres(options.url);

  try {
    mkdirSync(options.output, { recursive: true });

    if (options.table) {
      process.stdout.write(`Generating types for ${options.table} `);
      const dots = setInterval(() => process.stdout.write("."), 500);

      const tableType = await generateTableTypes(options.table, sql);
      clearInterval(dots);
      process.stdout.write("\n");

      const outputPath = path.join(options.output, `${options.table}.ts`);
      writeFileSync(outputPath, tableType);
      console.log(`✓ Types generated for table ${options.table}`);
    } else {
      process.stdout.write("Fetching tables...\n");
      const tables = await sql.unsafe(`
       SELECT table_name
       FROM information_schema.tables
       WHERE table_schema = 'public'
     `);

      let typesContent = "// Generated by retool-db-types\n\n";
      let count = 0;

      for (const row of tables) {
        printProgress(count, tables.length);
        const tableType = await generateTableTypes(row.table_name, sql);
        typesContent += tableType + "\n\n";
        count++;
      }

      printProgress(tables.length, tables.length);
      process.stdout.write("\n");

      const outputPath = path.join(options.output, "index.ts");
      writeFileSync(outputPath, typesContent);
      console.log("\n✓ Types generated successfully!");
    }
  } catch (error: unknown) {
    console.error(
      "\n❌ Error:",
      error instanceof Error ? error.message : "Unknown error",
    );
    process.exit(1);
  } finally {
    await sql.end();
  }
}

function main() {
  const args = arg({
    "--help": Boolean,
    "--url": String,
    "--output": String,
    "--table": String,

    // Aliases
    "-h": "--help",
    "-u": "--url",
    "-o": "--output",
    "-t": "--table",
  });

  if (args["--help"]) {
    printHelp();
    process.exit(0);
  }

  generateTypes({
    url: args["--url"] || "",
    output: args["--output"] || "./src/types",
    table: args["--table"],
  });
}

main();
