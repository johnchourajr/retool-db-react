{"version":3,"sources":["../src/hooks/useRetoolDatabase.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { z } from \"zod\";\nimport type {\n  RetoolDatabaseConfig,\n  RetoolDatabaseError,\n  RetoolDatabaseOptions,\n} from \"../types\";\n\nexport function useRetoolDatabase<T>(\n  tableName: string,\n  options?: RetoolDatabaseOptions,\n  config: RetoolDatabaseConfig = {},\n) {\n  const baseUrl = config.baseUrl || \"/api/retool-db\";\n  const [data, setData] = useState<T[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<RetoolDatabaseError | null>(null);\n  const [schema, setSchema] = useState<z.ZodObject<any, any> | null>(null);\n\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const res = await fetch(`${baseUrl}/${tableName}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(options || {}),\n      });\n      const result = await res.json();\n      if (!res.ok) throw new Error(result.error);\n      setData(result);\n    } catch (err) {\n      setError(\n        err instanceof Error\n          ? { message: err.message }\n          : { message: \"Unknown error\" },\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  }, [tableName, options, baseUrl]);\n\n  const insert = async (newData: Partial<T>) => {\n    if (schema) {\n      try {\n        schema.partial().parse(newData);\n      } catch (err) {\n        if (err instanceof z.ZodError) {\n          throw new Error(\n            `Validation error: ${err.errors.map((e) => e.message).join(\", \")}`,\n          );\n        }\n      }\n    }\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const res = await fetch(`${baseUrl}/${tableName}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          mutation: {\n            type: \"INSERT\",\n            data: newData,\n          },\n        }),\n      });\n      const result = await res.json();\n      if (!res.ok) throw new Error(result.error);\n      setData((prev) => (prev ? [...prev, result] : [result]));\n      return result;\n    } catch (err) {\n      const error = {\n        message: err instanceof Error ? err.message : \"Unknown error\",\n      };\n      setError(error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const update = async (where: Partial<T>, updateData: Partial<T>) => {\n    if (schema) {\n      try {\n        schema.partial().parse(updateData);\n      } catch (err) {\n        if (err instanceof z.ZodError) {\n          throw new Error(\n            `Validation error: ${err.errors.map((e) => e.message).join(\", \")}`,\n          );\n        }\n      }\n    }\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const res = await fetch(`${baseUrl}/${tableName}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          mutation: {\n            type: \"UPDATE\",\n            where,\n            data: updateData,\n          },\n        }),\n      });\n      const result = await res.json();\n      if (!res.ok) throw new Error(result.error);\n      setData((prev) => {\n        if (!prev) return result;\n        return prev.map((item) => {\n          const matches = Object.entries(where).every(\n            ([key, value]) => item[key as keyof T] === value,\n          );\n          return matches ? { ...item, ...updateData } : item;\n        });\n      });\n      return result;\n    } catch (err) {\n      const error = {\n        message: err instanceof Error ? err.message : \"Unknown error\",\n      };\n      setError(error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const remove = async (where: Partial<T>) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const res = await fetch(`${baseUrl}/${tableName}`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          mutation: {\n            type: \"DELETE\",\n            where,\n          },\n        }),\n      });\n      const result = await res.json();\n      if (!res.ok) throw new Error(result.error);\n      setData((prev) => {\n        if (!prev) return null;\n        return prev.filter(\n          (item) =>\n            !Object.entries(where).every(\n              ([key, value]) => item[key as keyof T] === value,\n            ),\n        );\n      });\n      return result;\n    } catch (err) {\n      const error = {\n        message: err instanceof Error ? err.message : \"Unknown error\",\n      };\n      setError(error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return {\n    data,\n    isLoading,\n    error,\n    insert,\n    update,\n    remove,\n    refetch: fetchData,\n  };\n}\n"],"mappings":"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","names":["error"]}